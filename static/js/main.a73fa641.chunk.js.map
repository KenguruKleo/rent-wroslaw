{"version":3,"sources":["components/common/IOSSwitch.tsx","components/AppBar.tsx","helpers.ts","components/RentItem.tsx","services/remoteData.ts","components/RentList.tsx","components/App.tsx","theme.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["IOSSwitch","styled","props","_jsx","Switch","_objectSpread","focusVisibleClassName","disableRipple","_ref","theme","width","height","padding","margin","transitionDuration","transform","color","backgroundColor","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","PrimaryAppBar","_React$useState","React","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","_React$useState3","_React$useState4","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","_jsxs","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","children","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","size","Badge","badgeContent","MailIcon","NotificationsIcon","AccountCircle","Box","sx","flexGrow","AppBar","position","style","paddingTop","Toolbar","edge","mr","MenuIcon","Typography","variant","noWrap","component","href","display","md","fontFamily","fontWeight","letterSpacing","textDecoration","FormGroup","FormControlLabel","control","m","checked","showAll","onChange","console","log","setShowAll","label","setRefreshedOn","Date","getTime","Refresh","xs","MoreIcon","Status","availableStauses","NEED_TO_CALL","WAIT_FOR_RESPONSE","WAIT_FOR_VIEW","READY_TO_RENT","RESERVE","likedStauses","isAvailable","status","includes","isLikedStatus","getColorByStatus","green","blue","yellow","NOT_MATCH","red","NOT_AVAILABLE","ExpandMore","expand","other","_objectWithoutProperties","_excluded","marginLeft","shortest","defaultImageLink","RentItem","item","expanded","setExpanded","_getColorByStatus","_getColorByStatus2","bageColor","bageBackground","Card","CardHeader","avatar","Avatar","bgcolor","action","MoreVertIcon","title","subheader","CardMedia","image","alt","CardContent","split","map","textItem","idx","CardActions","disableSpacing","FavoriteIcon","justifyContent","alignItems","Link","concat","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","paragraph","replaceAll","underline","doc","initialized","initRemoteData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","process","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","replace","loadInfo","stop","apply","arguments","getRemoteDoc","_ref2","_callee2","_context2","abrupt","RentList","setDoc","rows","setRows","then","resDoc","dataSheet","resRows","sheetsByTitle","getRows","sent","_x","refreshedOn","length","Grid","container","gap","filter","Offset","mixins","toolbar","App","Container","my","createTheme","primary","main","secondary","error","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","ThemeProvider","CssBaseline","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a73fa641.chunk.js","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\n\nconst IOSSwitch = styled((props: SwitchProps) => (\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\n))(({ theme }) => ({\n  width: 42,\n  height: 26,\n  padding: 0,\n  '& .MuiSwitch-switchBase': {\n    padding: 0,\n    margin: 2,\n    transitionDuration: '300ms',\n    '&.Mui-checked': {\n      transform: 'translateX(16px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#65C466',\n        opacity: 1,\n        border: 0,\n      },\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.5,\n      },\n    },\n    '&.Mui-focusVisible .MuiSwitch-thumb': {\n      color: '#33cf4d',\n      border: '6px solid #fff',\n    },\n    '&.Mui-disabled .MuiSwitch-thumb': {\n      color:\n        theme.palette.mode === 'light'\n          ? theme.palette.grey[100]\n          : theme.palette.grey[600],\n    },\n    '&.Mui-disabled + .MuiSwitch-track': {\n      opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxSizing: 'border-box',\n    width: 22,\n    height: 22,\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 26 / 2,\n    backgroundColor: theme.palette.mode === 'light' ? '#E9E9EA' : '#39393D',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color'], {\n      duration: 500,\n    }),\n  },\n}));\n\nexport default IOSSwitch\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Refresh from '@mui/icons-material/Refresh';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport { FormGroup, FormControlLabel } from '@mui/material';\nimport IOSSwitch from './common/IOSSwitch';\n\ntype PrimaryAppBarProps = {\n  showAll: boolean\n  setShowAll: (val: boolean) => void,\n  setRefreshedOn: (val: number) => void,\n}\n\nexport default function PrimaryAppBar(props: PrimaryAppBarProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"error\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          size=\"large\"\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n        >\n          <Badge badgeContent={17} color=\"error\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          size=\"large\"\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar\n        position=\"fixed\"\n        style={{paddingTop: \"env(safe-area-inset-top)\"}}\n      >\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            RW\n          </Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <IOSSwitch\n                  sx={{ m: 1 }}\n                  checked={props.showAll}\n                  onChange={() => {\n                    console.log('Switch to', !props.showAll)\n                    props.setShowAll(!props.showAll)\n                  }}\n                />\n              }\n              label=\"All\"\n            />\n          </FormGroup>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"refresh\"\n            onClick={() => props.setRefreshedOn(new Date().getTime())}\n          >\n            <Refresh />\n          </IconButton>\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"error\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n            >\n              <Badge badgeContent={17} color=\"error\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </Box>\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </Box>\n  );\n}\n","import { red, yellow, green, grey, blue } from '@mui/material/colors';\n\nexport enum Status {\n  NEED_TO_CALL = 'NEED_TO_CALL',\n  WAIT_FOR_RESPONSE = 'WAIT_FOR_RESPONSE',\n  WAIT_FOR_VIEW = 'WAIT_FOR_VIEW',\n  READY_TO_RENT = 'READY_TO_RENT',\n  NOT_MATCH = 'NOT_MATCH',\n  NOT_AVAILABLE = 'NOT_AVAILABLE',\n  RESERVE = 'RESERVE'\n} \n\nexport const availableStauses = [\n  Status.NEED_TO_CALL,\n  Status.WAIT_FOR_RESPONSE,\n  Status.WAIT_FOR_VIEW,\n  Status.READY_TO_RENT,\n  Status.RESERVE,\n]\n\nexport const likedStauses = [\n  Status.NEED_TO_CALL,\n  Status.WAIT_FOR_RESPONSE,\n  Status.WAIT_FOR_VIEW,\n]\n\nexport const isAvailable = (status: Status): boolean => {\n  return availableStauses.includes(status)\n}\n\nexport const isLikedStatus = (status: Status): boolean => {\n  return likedStauses.includes(status)\n}\n\nexport const getColorByStatus = (status: Status): [string, string] => {\n  switch (status) {\n    case Status.NEED_TO_CALL:\n      return [\"#ffffff\", green[900]]\n    case Status.WAIT_FOR_RESPONSE:\n      return [\"#ffffff\", green[700]]\n    case Status.WAIT_FOR_VIEW:\n      return [\"#ffffff\", green[500]]\n    case Status.READY_TO_RENT:\n      return [blue[900], yellow[500]]\n    case Status.RESERVE:\n      return [\"#ffffff\", grey[500]]\n    case Status.NOT_MATCH:\n      return [\"#ffffff\", red[900]]\n    case Status.NOT_AVAILABLE:\n      return [\"#ffffff\", green[500]]\n    default:\n      return [\"#ffffff\", red[500]]\n  }\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { GoogleSpreadsheetRow } from 'google-spreadsheet';\nimport { Box, Link } from '@mui/material';\nimport { getColorByStatus, isLikedStatus } from '../helpers';\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\ntype RentItemProps = {\n  item: GoogleSpreadsheetRow\n}\n\nconst defaultImageLink = \"https://destinations.ru/images/sights/poland/sight-big-rinochnaya-ploshchad-v-varshave.jpg\"\n\nexport default function RentItem(props: RentItemProps) {\n  const {item} = props;\n  // console.log(item)\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [bageColor, bageBackground] = getColorByStatus(item['Status'])\n\n  return (\n    <Card sx={{ width: 360 }}>\n      <CardHeader\n        sx={{\n          '& .MuiCardHeader-subheader': {\n            color: 'success.main',\n            fontWeight: 600\n          },\n        }}\n        avatar={\n          <Avatar sx={{ bgcolor: bageBackground, color: bageColor }} aria-label=\"recipe\">\n            {item[\"Num\"]}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={item['Info']}\n        subheader={item['Price']}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={\n          item['ImageLink'] ? item['ImageLink'] : defaultImageLink\n        }\n        alt=\"wroslaw\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {\n            (item['Next call / visit'] || '')\n              .split('\\n')\n              .map((textItem: any, idx: number) => (\n                  <li key={idx}>{textItem}</li>\n              ))\n          }\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        {\n          isLikedStatus(item['Status']) && (\n            <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon color='secondary' />\n          </IconButton>\n          )\n        }\n        {/* <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n          <Link href={item['Link']} variant=\"body1\" color=\"text.secondary\">\n            Open Link\n          </Link>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {item['Contacted'] ? `${item['Contacted']}` : \"Not contacted\"}\n          </Typography>\n        </Box>\n        <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>\n            Contact person: {item['Contact person']}\n          </Typography>\n          <Typography paragraph>\n            {\n              (item['Phone'] || '')\n                .split('\\n')\n                .map((textItem: any, idx: number) => (\n                    <li key={idx}>\n                      <Link href={`tel:+48${(textItem || '').replaceAll(' ', '')}`} underline=\"none\">\n                        Call: {textItem}\n                      </Link>\n                    </li>\n                ))\n            }\n          </Typography>\n          <Typography paragraph>\n            Cat: {item['Cat']}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import { GoogleSpreadsheet } from 'google-spreadsheet';\n\nlet doc: GoogleSpreadsheet\nlet initialized = false\n\nexport const initRemoteData = async () => {\n  const SHEET_ID = process.env.REACT_APP_SHEET_ID;\n  doc = new GoogleSpreadsheet(SHEET_ID);\n\n  await doc.useServiceAccountAuth({\n    // env var values are copied from service account credentials generated by google\n    // see \"Authentication\" section in docs for more info\n    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL!,\n    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY!.replace(/\\\\n/gm, \"\\n\"),\n  });\n\n  await doc.loadInfo()\n  console.log('doc.title', doc.title)\n\n  initialized = true;\n}\n\nexport const getRemoteDoc = async () => {\n  if (initialized) {\n    return doc\n  }\n\n  await initRemoteData()\n\n  return doc\n}\n\n","import * as React from 'react';\nimport RentItem from './RentItem';\nimport {getRemoteDoc} from '../services/remoteData'\nimport { GoogleSpreadsheet, GoogleSpreadsheetRow } from 'google-spreadsheet';\nimport { Grid } from '@mui/material';\nimport { isAvailable } from '../helpers';\n\ntype RentListProps = {\n  showAll: boolean,\n  refreshedOn: number\n}\n\nexport default function RentList(props: RentListProps) {\n  const [, setDoc] = React.useState<GoogleSpreadsheet>()\n  const [rows, setRows] = React.useState<GoogleSpreadsheetRow[]>([])\n\n  React.useEffect(() => {\n    getRemoteDoc().then(async (resDoc) => {\n      setDoc(resDoc)\n      const dataSheet = resDoc.sheetsByTitle['Data']\n      const resRows = await dataSheet.getRows()\n      setRows(resRows)\n    })\n  }, [props.refreshedOn])\n\n  if (rows.length === 0) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n\n  // for(const row of rows) {\n  //   console.log(row)\n  // }\n\n  return (\n    <Grid container gap={1}>\n      {\n        rows\n          .filter(item => props.showAll || isAvailable(item['Status']))\n          .map(item => (\n            <RentItem item={item} key={item['Num']} />\n          ))\n      }\n    </Grid>\n  )\n}","import * as React from 'react';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport PrimaryAppBar from './AppBar';\nimport RentList from './RentList';\nimport { styled } from '@mui/material/styles';\n\nconst Offset = styled('div')(({ theme }) => theme.mixins.toolbar);\n\nexport default function App() {\n  const [showAll, setShowAll] = React.useState(false)\n  const [refreshedOn, setRefreshedOn] = React.useState(new Date().getTime())\n\n  return (\n    <Box>\n      <PrimaryAppBar\n        showAll={showAll}\n        setShowAll={setShowAll}\n        setRefreshedOn={setRefreshedOn}\n      />\n      <Offset />\n      <Container>\n        <Box sx={{ my: 4 }}>\n          <RentList showAll={showAll} refreshedOn={refreshedOn} />\n        </Box>\n      </Container>\n    </Box>\n  );\n}","import { createTheme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0b32d1',\n    },\n    secondary: {\n      main: '#32d00a',\n    },\n    error: {\n      main: '#D00A32',\n    },\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}